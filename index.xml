<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpringLib</title>
    <link>https://iChunyu.github.io/helps/</link>
    <description>Recent content on SpringLib</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://iChunyu.github.io/helps/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>findMinPSD</title>
      <link>https://iChunyu.github.io/helps/functions/findminpsd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://iChunyu.github.io/helps/functions/findminpsd/</guid>
      <description>findMinPSD # 搜索关心频段内的最优功率谱密度。这里的最优定义为在给定积分区间内谱密度（以 \(\mathrm{*^2/Hz}\) 为单位）的积分最小。 说明 # findMinPSD(data,fs) 使用默认设置搜索最优功率谱密度并</description>
    </item>
    
    <item>
      <title>genNoise</title>
      <link>https://iChunyu.github.io/helps/functions/gennoise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://iChunyu.github.io/helps/functions/gennoise/</guid>
      <description>genNoise # 产生任意谱密度的噪声。 说明 # genNoise(ASD,fs) 根据给定谱密度和采样率构造噪声数据，并绘制其功率谱密度与目标曲线对比。 x = genNoise(ASD,fs,N) 根据给定的谱密度、采样率和点数</description>
    </item>
    
    <item>
      <title>iLPSD</title>
      <link>https://iChunyu.github.io/helps/functions/ilpsd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://iChunyu.github.io/helps/functions/ilpsd/</guid>
      <description>iLPSD # 使用 LPSD 算法进行功率谱估计。 说明 # iLPSD(data,fs) 根据给定数据和采样率直接绘制功率谱密度。 h = iLPSD(data,fs) 当只有一个输出时，绘图并输出曲线句柄。 [pxx,f] = iLPSD(data,fs) 当有两个输出</description>
    </item>
    
    <item>
      <title>InitPlot</title>
      <link>https://iChunyu.github.io/helps/functions/initplot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://iChunyu.github.io/helps/functions/initplot/</guid>
      <description>InitPlot # 初始化绘图设置。 说明 # InitPlot 使用默认值值初始化绘图设置。 InitPlot(LineWidth,FontSize,WindowStyle,Interperter) 根据指定值初始化绘图设置。 InitPlot(&#39;remove&#39;) 移除自定义设置，恢复 MATLAB 默认值。 输入 # LindWidth # 绘图采用的线宽</description>
    </item>
    
    <item>
      <title>spcolor</title>
      <link>https://iChunyu.github.io/helps/functions/spcolor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://iChunyu.github.io/helps/functions/spcolor/</guid>
      <description>spcolor # 设置绘图颜色。 说明 # spcolor 输出当前配色方案的颜色名字及其归一化 RGB 值。 cVec = spcolor(num) 根据数字索引输出对应颜色的 RGB 值。 cVec = spcolor(str) 根据名称索引输出对应颜色的 RGB</description>
    </item>
    
  </channel>
</rss>
